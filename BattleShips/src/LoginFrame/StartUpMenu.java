/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LoginFrame;

import Listeners.ButtonsListeners;
import Listeners.MenuItemsActionlisteners;
import Listeners.ModeListener;
import Listeners.SettingsListener;
import ServerFunctions.RequestListener;
import ServerFunctions.SentToServer;
import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/** Main Class for the Start Up Menu
 *
 * @author Dalibor Markovic
 */
public final class StartUpMenu extends javax.swing.JFrame {

    
    String title;
    Image icon;
    ImageIcon background;
    String user;
    String ServerIp;
    SentToServer send;
    Socket socket;
     BufferedReader br = null;
     PrintWriter pw = null;
    public StartUpMenu(String title, Image iconimage, ImageIcon backImage) {
     /** Creates new form StartUpFrame
     * @Title title The title of the programm
     * @Icon icon the icon of the programm
     * @ImageIcon background not in use only for future use
     * @Socket ServerIp The servers address in ipv4 format
     * @class SentToServer used to send data via the printwritter 
     * @Socket socket the server socket
     * @BufferedReader br the buffered reader 
     * @PrintWriter pw the print writer that flushes on any listening port 
     * 
     */
        initComponents();
        
        this.title = title;
        this.setTitle(title);
        this.icon = iconimage;
        this.setIconImage(icon);
        this.background = backImage;

        // this.setContentPane(new JLabel(new ImageIcon(backImage)));
    }
    /* Void method to init the required variables to be able to send data to the server
     * 
     * 
     * */
    public void serverfunctionsinit() {
       
        
        String port = "4242";
        
        try {
            socket = new Socket(ServerIP, Integer.parseInt(port));
            br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            pw = new PrintWriter(socket.getOutputStream());
            if (socket.isConnected()) {
                JOptionPane.showMessageDialog(rootPane, "Επιτυχεία Σύνδεσης");
                send = new SentToServer(pw, br);
                RequestListener listentoserver = new RequestListener(this, br);
                listentoserver.start();
                
            }
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, ex + "\n" + """
                                                                Ο Σερβερ Πιθανός να ειναι Down
                                                                """);
            System.out.println(ex);
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        ConsoleFieldScrollPane = new javax.swing.JScrollPane();
        ConsoleAreaText = new javax.swing.JTextArea();
        ConsoleLabel = new javax.swing.JLabel();
        NameInputField = new javax.swing.JTextField();
        ModeLabel = new javax.swing.JLabel();
        SinglePlayerBox = new javax.swing.JCheckBox();
        MultiePlayerBox = new javax.swing.JCheckBox();
        loginbutton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        OnlineListPanel = new javax.swing.JPanel();
        OnlineListLabel = new javax.swing.JLabel();
        PlayersList = new java.awt.Choice();
        ChallengeButton = new javax.swing.JButton();
        challengerTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        MyPortField = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();
        UserLabel = new javax.swing.JLabel();
        MainMenuBar = new javax.swing.JMenuBar();
        MainSettingsMenu = new javax.swing.JMenu();
        ServerSettingsItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(getName());
        setResizable(false);

        ConsoleAreaText.setColumns(20);
        ConsoleAreaText.setRows(5);
        ConsoleFieldScrollPane.setViewportView(ConsoleAreaText);

        ConsoleLabel.setText("Console log");

        NameInputField.setText("e.x john");
        NameInputField.setToolTipText("User Name");
        NameInputField.setBackground(new Color(100, 100, 50));
        NameInputField.setActionCommand("NameInputField");
        NameInputField.addMouseListener(new SettingsListener(this));

        ModeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ModeLabel.setText("Select Mode");

        SinglePlayerBox.setText("Single Player");
        SinglePlayerBox.setActionCommand("SinglePlayer");
        SinglePlayerBox.addActionListener(new ModeListener(this));

        MultiePlayerBox.setText("Multie Player");
        MultiePlayerBox.setActionCommand("MultiePlayer");
        MultiePlayerBox.addActionListener(new ModeListener(this));

        loginbutton.setText("login");
        loginbutton.addActionListener(new ButtonsListeners(this));

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(ConsoleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ConsoleFieldScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ExitButton)))
                .addContainerGap())
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameInputField)
                            .addComponent(loginbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(ModeLabel))
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(SinglePlayerBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MultiePlayerBox)))))
                .addGap(39, 86, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(ModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MultiePlayerBox)
                    .addComponent(SinglePlayerBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginbutton)
                .addGap(41, 41, 41)
                .addComponent(ConsoleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsoleFieldScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ExitButton)
                .addGap(10, 10, 10))
        );

        OnlineListPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        OnlineListLabel.setText("Players Online");

        ChallengeButton.setText("challenge");
        ChallengeButton.setEnabled(false);
        ChallengeButton.addActionListener(new ButtonsListeners(this));

        jLabel1.setText("My username :");

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new ButtonsListeners(this));

        javax.swing.GroupLayout OnlineListPanelLayout = new javax.swing.GroupLayout(OnlineListPanel);
        OnlineListPanel.setLayout(OnlineListPanelLayout);
        OnlineListPanelLayout.setHorizontalGroup(
            OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OnlineListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OnlineListPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(MyPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OnlineListPanelLayout.createSequentialGroup()
                        .addGroup(OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(OnlineListLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PlayersList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OnlineListPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RefreshButton))
                            .addGroup(OnlineListPanelLayout.createSequentialGroup()
                                .addGap(0, 155, Short.MAX_VALUE)
                                .addComponent(ChallengeButton)
                                .addGap(145, 145, 145))
                            .addComponent(challengerTextField))
                        .addContainerGap())))
        );
        OnlineListPanelLayout.setVerticalGroup(
            OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OnlineListPanelLayout.createSequentialGroup()
                .addComponent(OnlineListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OnlineListPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(OnlineListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(OnlineListPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RefreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(challengerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(ChallengeButton)
                .addGap(65, 65, 65)
                .addComponent(MyPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        MainSettingsMenu.setText("Settings");
        MainSettingsMenu.setActionCommand("settings");

        ServerSettingsItem.setText("Server Settings");
        ServerSettingsItem.setInheritsPopupMenu(true);
        ServerSettingsItem.setOpaque(true);
        MainSettingsMenu.add(ServerSettingsItem);
        ServerSettingsItem.addActionListener(new MenuItemsActionlisteners(this));

        MainMenuBar.add(MainSettingsMenu);
        MainSettingsMenu.addMouseListener(new SettingsListener(this));

        setJMenuBar(MainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OnlineListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(OnlineListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    /** Action listener that implements the exit feature
     * @String temp Holds a value but is not used at any point during the action of this method
     * @String exit Holds the "request" value that the server will read 
     * @String finalrequest Holds the concateneted String 
     * 
     * */
    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        if (this.send == null) {
            System.out.println("EXITED WITH SYSTEM EXIT 0");
            System.exit(0);
        } else if (this.send != null) {
            System.out.println("EXITED BY SENDING EXIT CODE AND REQUEST LISTENER MAKES THE EXIT ");
            String temp = "0";
            String exit = ":e";
            String finalrequest = temp + exit;
            System.out.println("senddata debug data" + temp + " " + exit);
            sentdata(finalrequest);
            
        } else if (evt.getActionCommand().equals("Exit")) {
            System.exit(0);
        }
        

    }//GEN-LAST:event_ExitButtonActionPerformed
    
    /** senddata method is used to send data to server 
     * @method broadcast is used in the SendToServer method but its called here
     * 
     * */
    public void sentdata(String data) {
        if(send == null){
        
            JOptionPane.showMessageDialog(rootPane, "Can't Send data to server because no connection is enstablished");
        
        }else{
            System.out.println("senddata method debug  " + data );
        send.broadcast(data);
        }
    }
    public String ServerIP;
    public String PlayerName;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton ChallengeButton;
    private javax.swing.JTextArea ConsoleAreaText;
    private javax.swing.JScrollPane ConsoleFieldScrollPane;
    private javax.swing.JLabel ConsoleLabel;
    private javax.swing.JButton ExitButton;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JPanel MainPanel;
    public javax.swing.JMenu MainSettingsMenu;
    private javax.swing.JLabel ModeLabel;
    public javax.swing.JCheckBox MultiePlayerBox;
    protected javax.swing.JLabel MyPortField;
    public javax.swing.JTextField NameInputField;
    private javax.swing.JLabel OnlineListLabel;
    private javax.swing.JPanel OnlineListPanel;
    public java.awt.Choice PlayersList;
    public javax.swing.JButton RefreshButton;
    private javax.swing.JMenuItem ServerSettingsItem;
    public javax.swing.JCheckBox SinglePlayerBox;
    public javax.swing.JLabel UserLabel;
    public javax.swing.JTextField challengerTextField;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JButton loginbutton;
    // End of variables declaration//GEN-END:variables
}
